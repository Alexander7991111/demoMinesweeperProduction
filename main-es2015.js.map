{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game/board.ts","./src/app/game/cell.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Board } from './game/board';\nimport { Cell } from './game/cell';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'minesweeper';\n  board: Board;\n  constructor() {\n    this.reset();\n  }\n\n  checkCell(cell: Cell) {\n    const result = this.board.checkCell(cell);\n    if (result === 'gameover') {\n      alert('You lose');\n    } else if (result === 'win') {\n      alert('you win');\n    }\n  }\n  flag(cell: Cell) {\n    if (cell.status === 'flag') {\n      cell.status = 'open';\n    } else {\n      cell.status = 'flag';\n    }\n  }\n\n  reset() {\n    this.board = new Board(20, 50);\n  }\n}\n","<style>\n  table,\n  td {\n    border: 1px solid black;\n    border-collapse: collapse;\n  }\n  td {\n    text-align: center;\n  }\n  .clear {\n    background-color: #7B7B7B;\n    padding: 10px;\n    height: 15px;\n    width: 15px;\n  }\n  .flag{\n    background-color: #BDBDBD;\n    padding: 10px;\n    height: 15px;\n    width: 15px;\n  }\n  .mine {\n    background-color: #7B7B7B;\n    padding: 10px;\n    height: 15px;\n    width: 15px;\n  }\n  .open {\n    background-color: #BDBDBD;\n    padding: 10px;\n    height: 28px;\n    width: 24px;\n  }\n</style>\n\nBoard:\n<table>\n  <tr *ngFor=\"let row of board.cells; index as y\">\n    <td\n      *ngFor=\"let cell of row; index as x\"\n      (click)=\"checkCell(cell)\"\n      (contextmenu)=\"$event.preventDefault(); flag(cell)\"\n      [ngClass]=\"{'clear': cell.status === 'clear' && !cell.mine, 'flag': cell.status === 'flag', 'mine': cell.mine && cell.status === 'clear', 'open' : cell.status === 'open'}\"\n    >\n      <!-- <div>Status: {{ cell.status }}</div> -->\n      <div *ngIf=\"cell.status === 'clear' && !cell.mine\">{{ cell.proximityMines }}</div>\n      <div *ngIf=\"cell.status === 'flag'\">\n        <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n          <path fill=\"#000000\" d=\"M14.4,6L14,4H5V21H7V14H12.6L13,16H20V6H14.4Z\" />\n        </svg>\n      </div>\n      <div *ngIf=\"cell.mine && cell.status === 'clear'\">\n        <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n          <path\n            fill=\"#000000\"\n            d=\"M23,13V11H19.93C19.75,9.58 19.19,8.23 18.31,7.1L20.5,4.93L19.07,3.5L16.9,5.69C15.77,4.81 14.42,4.25 13,4.07V1H11V4.07C9.58,4.25 8.23,4.81 7.1,5.69L4.93,3.5L3.5,4.93L5.69,7.1C4.81,8.23 4.25,9.58 4.07,11H1V13H4.07C4.25,14.42 4.81,15.77 5.69,16.9L3.5,19.07L4.93,20.5L7.1,18.31C8.23,19.19 9.58,19.75 11,19.93V23H13V19.93C14.42,19.75 15.77,19.19 16.9,18.31L19.07,20.5L20.5,19.07L18.31,16.9C19.19,15.77 19.75,14.42 19.93,13H23M12,8A4,4 0 0,0 8,12H6A6,6 0 0,1 12,6V8Z\"\n          />\n        </svg>\n      </div>\n    </td>\n  </tr>\n</table>\n\n<button (click)=\"reset()\">Restart</button>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Cell } from './cell';\n\nconst PEERS = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n\nexport class Board {\n  cells: Cell[][] = [];\n\n  private remainingCells = 0;\n  private mineCount = 0;\n\n  constructor(size: number, mines: number) {\n    for (let y = 0; y < size; y++) {\n      this.cells[y] = [];\n      for (let x = 0; x < size; x++) {\n        this.cells[y][x] = new Cell(y, x);\n      }\n    }\n\n    // Assign mines\n    for (let i = 0; i < mines; i++) {\n      this.getRandomCell().mine = true;\n    }\n\n    // Count mines\n\n    for (let y = 0; y < size; y++) {\n      for (let x = 0; x < size; x++) {\n        let adjacentMines = 0;\n        for (const peer of PEERS) {\n          if (\n            this.cells[y + peer[0]] &&\n            this.cells[y + peer[0]][x + peer[1]] &&\n            this.cells[y + peer[0]][x + peer[1]].mine\n          ) {\n            adjacentMines++;\n          }\n        }\n        this.cells[y][x].proximityMines = adjacentMines;\n\n        if (this.cells[y][x].mine) {\n          this.mineCount++;\n        }\n      }\n    }\n    this.remainingCells = size * size - this.mineCount;\n  }\n\n  getRandomCell(): Cell {\n    const y = Math.floor(Math.random() * this.cells.length);\n    const x = Math.floor(Math.random() * this.cells[y].length);\n    return this.cells[y][x];\n  }\n\n  checkCell(cell: Cell): 'gameover' | 'win' | null {\n    if (cell.status !== 'open') {\n      return;\n    } else if (cell.mine) {\n      this.revealAll();\n      return 'gameover';\n    } else {\n      cell.status = 'clear';\n\n      // Empty cell, let's clear the whole block.\n      if(cell.proximityMines === 0) {\n        for(const peer of PEERS) {\n          if (\n            this.cells[cell.row + peer[0]] &&\n            this.cells[cell.row + peer[0]][cell.column + peer[1]]\n          ) {\n            this.checkCell(this.cells[cell.row + peer[0]][cell.column + peer[1]]);\n          }\n        }\n      }\n\n\n      if (this.remainingCells-- <= 1) {\n        return 'win';\n      }\n      return;\n    }\n  }\n  revealAll() {\n    for (const row of this.cells) {\n      for (const cell of row) {\n        if (cell.status === 'open') {\n          cell.status = 'clear';\n        }\n      }\n    }\n  }\n}\n","export class Cell {\n  status: 'open' | 'clear' | 'flag' = 'open';\n  mine = false;\n  proximityMines = 0;\n\n  constructor(public row: number, public column: number) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}