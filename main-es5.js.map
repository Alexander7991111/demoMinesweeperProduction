{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/board.ts","webpack:///src/app/game/cell.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","$event","preventDefault","AppComponent","title","reset","cell","result","board","checkCell","alert","status","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","PEERS","Board","size","mines","cells","remainingCells","mineCount","y","x","i","getRandomCell","mine","adjacentMines","peer","proximityMines","Math","floor","random","length","revealAll","row","column","Cell","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Board } from './game/board';\nimport { Cell } from './game/cell';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'minesweeper';\n  board: Board;\n  constructor() {\n    this.reset();\n  }\n\n  checkCell(cell: Cell) {\n    const result = this.board.checkCell(cell);\n    if (result === 'gameover') {\n      alert('You lose');\n    } else if (result === 'win') {\n      alert('you win');\n    }\n  }\n  flag(cell: Cell) {\n    if (cell.status === 'flag') {\n      cell.status = 'open';\n    } else {\n      cell.status = 'flag';\n    }\n  }\n\n  reset() {\n    this.board = new Board(20, 50);\n  }\n}\n","<style>\n  table,\n  td {\n    border: 1px solid black;\n    border-collapse: collapse;\n  }\n  td {\n    text-align: center;\n  }\n  .clear {\n    background-color: #7B7B7B;\n    padding: 10px;\n    height: 15px;\n    width: 15px;\n  }\n  .flag{\n    background-color: #BDBDBD;\n    padding: 10px;\n    height: 15px;\n    width: 15px;\n  }\n  .mine {\n    background-color: #7B7B7B;\n    padding: 10px;\n    height: 15px;\n    width: 15px;\n  }\n  .open {\n    background-color: #BDBDBD;\n    padding: 10px;\n    height: 28px;\n    width: 24px;\n  }\n</style>\n\nBoard:\n<table>\n  <tr *ngFor=\"let row of board.cells; index as y\">\n    <td\n      *ngFor=\"let cell of row; index as x\"\n      (click)=\"checkCell(cell)\"\n      (contextmenu)=\"$event.preventDefault(); flag(cell)\"\n      [ngClass]=\"{'clear': cell.status === 'clear' && !cell.mine, 'flag': cell.status === 'flag', 'mine': cell.mine && cell.status === 'clear', 'open' : cell.status === 'open'}\"\n    >\n      <!-- <div>Status: {{ cell.status }}</div> -->\n      <div *ngIf=\"cell.status === 'clear' && !cell.mine\">{{ cell.proximityMines }}</div>\n      <div *ngIf=\"cell.status === 'flag'\">\n        <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n          <path fill=\"#000000\" d=\"M14.4,6L14,4H5V21H7V14H12.6L13,16H20V6H14.4Z\" />\n        </svg>\n      </div>\n      <div *ngIf=\"cell.mine && cell.status === 'clear'\">\n        <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n          <path\n            fill=\"#000000\"\n            d=\"M23,13V11H19.93C19.75,9.58 19.19,8.23 18.31,7.1L20.5,4.93L19.07,3.5L16.9,5.69C15.77,4.81 14.42,4.25 13,4.07V1H11V4.07C9.58,4.25 8.23,4.81 7.1,5.69L4.93,3.5L3.5,4.93L5.69,7.1C4.81,8.23 4.25,9.58 4.07,11H1V13H4.07C4.25,14.42 4.81,15.77 5.69,16.9L3.5,19.07L4.93,20.5L7.1,18.31C8.23,19.19 9.58,19.75 11,19.93V23H13V19.93C14.42,19.75 15.77,19.19 16.9,18.31L19.07,20.5L20.5,19.07L18.31,16.9C19.19,15.77 19.75,14.42 19.93,13H23M12,8A4,4 0 0,0 8,12H6A6,6 0 0,1 12,6V8Z\"\n          />\n        </svg>\n      </div>\n    </td>\n  </tr>\n</table>\n\n<button (click)=\"reset()\">Restart</button>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Cell } from './cell';\n\nconst PEERS = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n\nexport class Board {\n  cells: Cell[][] = [];\n\n  private remainingCells = 0;\n  private mineCount = 0;\n\n  constructor(size: number, mines: number) {\n    for (let y = 0; y < size; y++) {\n      this.cells[y] = [];\n      for (let x = 0; x < size; x++) {\n        this.cells[y][x] = new Cell(y, x);\n      }\n    }\n\n    // Assign mines\n    for (let i = 0; i < mines; i++) {\n      this.getRandomCell().mine = true;\n    }\n\n    // Count mines\n\n    for (let y = 0; y < size; y++) {\n      for (let x = 0; x < size; x++) {\n        let adjacentMines = 0;\n        for (const peer of PEERS) {\n          if (\n            this.cells[y + peer[0]] &&\n            this.cells[y + peer[0]][x + peer[1]] &&\n            this.cells[y + peer[0]][x + peer[1]].mine\n          ) {\n            adjacentMines++;\n          }\n        }\n        this.cells[y][x].proximityMines = adjacentMines;\n\n        if (this.cells[y][x].mine) {\n          this.mineCount++;\n        }\n      }\n    }\n    this.remainingCells = size * size - this.mineCount;\n  }\n\n  getRandomCell(): Cell {\n    const y = Math.floor(Math.random() * this.cells.length);\n    const x = Math.floor(Math.random() * this.cells[y].length);\n    return this.cells[y][x];\n  }\n\n  checkCell(cell: Cell): 'gameover' | 'win' | null {\n    if (cell.status !== 'open') {\n      return;\n    } else if (cell.mine) {\n      this.revealAll();\n      return 'gameover';\n    } else {\n      cell.status = 'clear';\n\n      // Empty cell, let's clear the whole block.\n      if(cell.proximityMines === 0) {\n        for(const peer of PEERS) {\n          if (\n            this.cells[cell.row + peer[0]] &&\n            this.cells[cell.row + peer[0]][cell.column + peer[1]]\n          ) {\n            this.checkCell(this.cells[cell.row + peer[0]][cell.column + peer[1]]);\n          }\n        }\n      }\n\n\n      if (this.remainingCells-- <= 1) {\n        return 'win';\n      }\n      return;\n    }\n  }\n  revealAll() {\n    for (const row of this.cells) {\n      for (const cell of row) {\n        if (cell.status === 'open') {\n          cell.status = 'clear';\n        }\n      }\n    }\n  }\n}\n","export class Cell {\n  status: 'open' | 'clear' | 'flag' = 'open';\n  mine = false;\n  proximityMines = 0;\n\n  constructor(public row: number, public column: number) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}